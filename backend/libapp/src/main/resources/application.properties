spring.application.name=digilib
com.corp.libapp.search.url.scheme=https
com.corp.libapp.search.url.host=openlibrary.org
com.corp.libapp.search.url.query-path=/api/books
com.corp.libapp.search.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}
com.corp.libapp.search.cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
com.corp.libapp.search.cors.allowed-methods=${CORS_ALLOWED_METHODS:*}
com.corp.libapp.search.cors.max-age=${CORS_MAX_AGE:3600}
management.endpoints.web.exposure.include=health,modulith
management.endpoint.health.probes.enabled=true
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui
spring.datasource.url=jdbc:postgresql://${PSQL_HOST:localhost}:${PSQL_PORT:5432}/${PSQL_DB:appdb}
spring.datasource.username=${PSQL_USER:dbuser}
spring.datasource.password=${PSQL_PASS:1q2w3e4r:!}
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.modulith.events.kafka.json-enabled=true
spring.kafka.bootstrap-servers=${KAFKA_SERVERS:localhost:9092}
spring.neo4j.uri=bolt://${NEO4J_HOST:localhost}:${NEO4J_PORT:7687}
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:zipkin.digilib.local}/api/v2/spans
management.tracing.sampling.probability=1.0