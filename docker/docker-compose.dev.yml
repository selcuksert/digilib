version: '3'
services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL",  "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:2375/version" ]
    environment:
      CONTAINERS: 1
      IMAGES: 1
      AUTH: 1
      POST: 1
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.11
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedbydefault=false
      - --ping
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI: http://localhost:8081 (enabled by --api.insecure=true)
      - "8081:8080"
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - socket-proxy
  neo4j:
    image: neo4j:5-community
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=none
    ports:
      - "7687:7687"
    healthcheck:
      test: [ "CMD-SHELL",  "wget", "--no-verbose", "--tries=1", "--spider", "localhost:7474" ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.neo4j-web.rule=Host(`neo4j.digilib.local`)"
      - "traefik.http.routers.neo4j-web.entrypoints=web"
      - "traefik.http.routers.neo4j-web.service=neo4j-web-service"
      - "traefik.http.services.neo4j-web-service.loadbalancer.server.port=7474"
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: 1q2w3e4r:!
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: unless-stopped
    container_name: pgadmin4_container
    ports:
      - "9080:80"
    healthcheck:
      test: [ "CMD-SHELL",  "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/misc/ping" ]
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@corp.com
      PGADMIN_DEFAULT_PASSWORD: Mnbuyt765
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.digilib.local`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.routers.pgadmin.service=pgadmin-service"
      - "traefik.http.services.pgadmin-service.loadbalancer.server.port=80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db
networks:
  default:
volumes:
  postgresql-data:
  pgadmin-data:
